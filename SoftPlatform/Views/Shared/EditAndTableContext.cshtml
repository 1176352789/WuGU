@model MyResponseBase

@{
    Layout = null;
    var conts = ViewContext.Controller as BaseController;
    var modulars = conts.Design_ModularOrFun;
    var btns = conts.LoginModulerBtns(modulars.ModularOrFunCode, 1);

    var modularsEdit = conts.Design_ModularOrFunEdit;
    var btnFoots = new List<SoftProjectAreaEntity>();
    if (modularsEdit != null)
    {
        btnFoots = conts.LoginModulerBtns(modularsEdit.ModularOrFunCode, 3);
    }

    var bdisp = Html.BDispFormEleHtml(modularsEdit);
    //var btns = ProjectCache.Design_ModularOrFunBtns.Where(p => p.ModularOrFunCode == modulars.ModularOrFunCode && (p.OperPos == 1)).OrderBy(p => p.Sort).ToList();

    var BscrollBar = "scrollBar scrollBarAuto";
}

<div class="targetdom container-fluid">
    <div class='mastEditArea editArea'>
        @if (bdisp)
        {
            <form>
                <div class="container-fluid">
                    <div class='form-horizontal merge '>
                        <ul class="form-horizontal merge">
                            @Html.FormEleHtml(Model.Item, Model.ModularOrFunCode, 4, modularsEdit)
                        </ul>
                    </div>
                </div>
            </form>
        }
        else
        {
            @Html.FormEleHtml(Model.Item, Model.ModularOrFunCode, 4, modularsEdit)        
        }
    </div>
    <div class="container-fluid targetdom childTableSelect">
        <div class='operArea' data-searchmethod='@modulars.SearchMethod' data-url="@modulars.ActionPath" data-targetdom=".targetdom">
            @if (btns != null && btns.Count > 0 || modulars.QueryFormEleTypeName != null)
            {
                <div class="search-bar">
                    <div class="tool-bar search-bar ">
                        <div class="col-sm-@modulars.ToolbarButtonAreaWidth">
                            @Html.ToolBarHtml(Model.Item, modulars, btns)
                        </div>
                        <div class="col-sm-@modulars.ToolbarSearchAreaWidth text-right form-inline"  id="SearchArea">
                            @Html.QueryHtml(Model.Querys, Model.ModularOrFunCode)
                        </div>
                    </div>
                </div>
            }
            <div style="clear: both; margin-bottom: 10px;"></div>
            <div class="@BscrollBar" style="width: 100%; overflow: auto;" data-width="@modulars.TableWidth">
                <div class="mylist container" style="width:@modulars.TableWidth;overflow:inherit;">
                    <table id='tbList' class="table table-bordered table-hover table-striped FwtabletoTab" style="width: 100%;">
                        @Html.TableHtml(Model.Items, Model.ItemTotal, Model.PageQueryBase.RankInfos, Model.ModularOrFunCode)
                    </table>
                </div>
            </div>
            <!-- 分页 -->
            @if (modulars.bPage == 1)
            {
                <div class="page-bar">
                    @Html.Partial("_PagingOption", Model.PageQueryBase)

                </div>
            }
        </div>
    </div>
    <div class='editArea'>
        <div class="container-fluid">
            <div class="form-footer1">
                <div class="text-right col-md-12">
                    @Html.BtnFooterHtml(Model.Item, Model.ModularOrFunCode, btnFoots)
                </div>
            </div>
        </div>
    </div>
</div>
